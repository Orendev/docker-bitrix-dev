user www-data;

# Число рабочих процессов, рекомендуется ставить по количеству ядер
worker_processes 4;
pid /var/run/nginx.pid;

events {
    # Задает максимальное число соединений, которые одновременно может открыть рабочий процесс
    worker_connections  1024;
    # Рабочий процесс за один раз будет принимать сразу все новые соединения
    multi_accept on;
    use epoll;
}

http {
    index index.php index.html;
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    # Запрещает выдавать версию nginx’а на страницах ошибок
    server_tokens off;
    # Таймаут, в течение которого keep-alive соединение с клиентом не будет закрыто со стороны сервера
    keepalive_timeout 15;
    # Задает максимально допустимый размер тела запроса клиента, указываемый в поле “Content-Length” заголовка запроса.
    client_max_body_size 32m;
    include /etc/nginx/conf.d/*.conf;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    resolver 8.8.8.8;

    access_log on;
    error_log on;

    log_format main '$remote_addr - $remote_user [$time_local] $request '
        '"$status" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$request_body"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    server {
        listen 80 default_server;
        charset utf-8;
        root /var/www/html;

        location / {
            try_files $uri $uri/ @bitrix;
        }

        location @bitrix {
            fastcgi_pass php-upstream;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/bitrix/urlrewrite.php;
        }

        location ~ \.php$ {
            fastcgi_pass php-upstream;
            include fastcgi_params;
            fastcgi_index index.php;
            fastcgi_send_timeout 21600;
            fastcgi_read_timeout 21600;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|eot|otf|ttf|woff|woff2)$ {
            log_not_found off;
            access_log off;
            expires 30d;
            add_header Cache-Control public;
        }

        location ~ /\.ht {
            deny all;
        }
    }

#    server {
#        listen 443 ssl;
#        charset utf-8;
#        root /var/www/html;

#        ssl_certificate     /etc/ssl/localhost.crt;
#        ssl_certificate_key /etc/ssl/localhost.key;
#        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
#        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Задает максимально допустимый размер тела запроса клиента, указываемый в поле “Content-Length” заголовка запроса.
#        client_max_body_size 32m;

 #       access_log /var/log/nginx/access.log main;
 #       error_log /var/log/nginx/error.log;

 #       location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|eot|otf|ttf|woff|woff2)$ {
 #           log_not_found off;
 #           access_log off;
            # expires 30d;
            # add_header Cache-Control public;
 #       }

 #       location ~ /\.ht {
 #           deny all;
 #       }

 #       location / {
 #           proxy_pass http://apache;
 #           proxy_set_header Host $host;
 #           proxy_set_header X-Real-IP $remote_addr;
 #           proxy_set_header X-Forwarded-For $remote_addr;
 #           proxy_connect_timeout 120;
 #           fastcgi_send_timeout 21600;
 #           fastcgi_read_timeout 21600;
 #       }
 #   }
}